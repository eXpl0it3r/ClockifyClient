// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UpdateTimeEntryBulkRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Indicates whether a time entry is billable or not.</summary>
        public bool? Billable { get; set; }
        /// <summary>The customFields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.UpdateCustomFieldRequest>? CustomFields { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.UpdateCustomFieldRequest> CustomFields { get; set; }
#endif
        /// <summary>Represents time entry description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Represents an end date in yyyy-MM-ddThh:mm:ssZ format.</summary>
        public DateTimeOffset? End { get; set; }
        /// <summary>Represents time entry identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Represents project identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; set; }
#nullable restore
#else
        public string ProjectId { get; set; }
#endif
        /// <summary>Represents a start date in yyyy-MM-ddThh:mm:ssZ format.</summary>
        public DateTimeOffset? Start { get; set; }
        /// <summary>Represents a list of tag ids.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TagIds { get; set; }
#nullable restore
#else
        public List<string> TagIds { get; set; }
#endif
        /// <summary>Represents task identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaskId { get; set; }
#nullable restore
#else
        public string TaskId { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::ClockifyClient.Models.UpdateTimeEntryBulkRequest_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.UpdateTimeEntryBulkRequest"/> and sets the default values.
        /// </summary>
        public UpdateTimeEntryBulkRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.UpdateTimeEntryBulkRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.UpdateTimeEntryBulkRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.UpdateTimeEntryBulkRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "billable", n => { Billable = n.GetBoolValue(); } },
                { "customFields", n => { CustomFields = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.UpdateCustomFieldRequest>(global::ClockifyClient.Models.UpdateCustomFieldRequest.CreateFromDiscriminatorValue)?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "end", n => { End = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "projectId", n => { ProjectId = n.GetStringValue(); } },
                { "start", n => { Start = n.GetDateTimeOffsetValue(); } },
                { "tagIds", n => { TagIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "taskId", n => { TaskId = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::ClockifyClient.Models.UpdateTimeEntryBulkRequest_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("billable", Billable);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.UpdateCustomFieldRequest>("customFields", CustomFields);
            writer.WriteStringValue("description", Description);
            writer.WriteDateTimeOffsetValue("end", End);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("projectId", ProjectId);
            writer.WriteDateTimeOffsetValue("start", Start);
            writer.WriteCollectionOfPrimitiveValues<string>("tagIds", TagIds);
            writer.WriteStringValue("taskId", TaskId);
            writer.WriteEnumValue<global::ClockifyClient.Models.UpdateTimeEntryBulkRequest_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
