// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ExpensesAndTotalsDtoV1 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents a list of expense daily total data transfer objects.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.ExpenseDailyTotalsDtoV1>? DailyTotals { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.ExpenseDailyTotalsDtoV1> DailyTotals { get; set; }
#endif
        /// <summary>Represents an expense with count data transfer object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.ExpensesWithCountDtoV1? Expenses { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.ExpensesWithCountDtoV1 Expenses { get; set; }
#endif
        /// <summary>Represents a list of expense weekly total data transfer objects.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.ExpenseWeeklyTotalsDtoV1>? WeeklyTotals { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.ExpenseWeeklyTotalsDtoV1> WeeklyTotals { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.ExpensesAndTotalsDtoV1"/> and sets the default values.
        /// </summary>
        public ExpensesAndTotalsDtoV1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.ExpensesAndTotalsDtoV1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.ExpensesAndTotalsDtoV1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.ExpensesAndTotalsDtoV1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dailyTotals", n => { DailyTotals = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.ExpenseDailyTotalsDtoV1>(global::ClockifyClient.Models.ExpenseDailyTotalsDtoV1.CreateFromDiscriminatorValue)?.AsList(); } },
                { "expenses", n => { Expenses = n.GetObjectValue<global::ClockifyClient.Models.ExpensesWithCountDtoV1>(global::ClockifyClient.Models.ExpensesWithCountDtoV1.CreateFromDiscriminatorValue); } },
                { "weeklyTotals", n => { WeeklyTotals = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.ExpenseWeeklyTotalsDtoV1>(global::ClockifyClient.Models.ExpenseWeeklyTotalsDtoV1.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.ExpenseDailyTotalsDtoV1>("dailyTotals", DailyTotals);
            writer.WriteObjectValue<global::ClockifyClient.Models.ExpensesWithCountDtoV1>("expenses", Expenses);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.ExpenseWeeklyTotalsDtoV1>("weeklyTotals", WeeklyTotals);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
