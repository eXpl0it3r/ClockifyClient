// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UpdateTaskRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The assigneeId property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssigneeId { get; set; }
#nullable restore
#else
        public string AssigneeId { get; set; }
#endif
        /// <summary>Represents list of assignee ids for the task.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AssigneeIds { get; set; }
#nullable restore
#else
        public List<string> AssigneeIds { get; set; }
#endif
        /// <summary>Indicates whether a task is billable or not.</summary>
        public bool? Billable { get; set; }
        /// <summary>Represents a task budget estimate as integer.</summary>
        public long? BudgetEstimate { get; set; }
        /// <summary>Represents a task duration estimate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Estimate { get; set; }
#nullable restore
#else
        public string Estimate { get; set; }
#endif
        /// <summary>Represents task name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Represents task status.</summary>
        public global::ClockifyClient.Models.UpdateTaskRequest_status? Status { get; set; }
        /// <summary>Represents list of user group ids for the task.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UserGroupIds { get; set; }
#nullable restore
#else
        public List<string> UserGroupIds { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.UpdateTaskRequest"/> and sets the default values.
        /// </summary>
        public UpdateTaskRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.UpdateTaskRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.UpdateTaskRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.UpdateTaskRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assigneeId", n => { AssigneeId = n.GetStringValue(); } },
                { "assigneeIds", n => { AssigneeIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "billable", n => { Billable = n.GetBoolValue(); } },
                { "budgetEstimate", n => { BudgetEstimate = n.GetLongValue(); } },
                { "estimate", n => { Estimate = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::ClockifyClient.Models.UpdateTaskRequest_status>(); } },
                { "userGroupIds", n => { UserGroupIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("assigneeId", AssigneeId);
            writer.WriteCollectionOfPrimitiveValues<string>("assigneeIds", AssigneeIds);
            writer.WriteBoolValue("billable", Billable);
            writer.WriteLongValue("budgetEstimate", BudgetEstimate);
            writer.WriteStringValue("estimate", Estimate);
            writer.WriteStringValue("name", Name);
            writer.WriteEnumValue<global::ClockifyClient.Models.UpdateTaskRequest_status>("status", Status);
            writer.WriteCollectionOfPrimitiveValues<string>("userGroupIds", UserGroupIds);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
