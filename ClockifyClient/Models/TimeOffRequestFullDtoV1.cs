// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    /// <summary>
    /// Represents the array of time off requests.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TimeOffRequestFullDtoV1 : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents the time off balance.</summary>
        public double? Balance { get; set; }
        /// <summary>Represents the balance difference.</summary>
        public double? BalanceDiff { get; set; }
        /// <summary>Represents the date when time off request is created. It is in format YYYY-MM-DDTHH:MM:SS.ssssssZ</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Represents time off requester identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Represents the note of the time off request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Note { get; set; }
#nullable restore
#else
        public string Note { get; set; }
#endif
        /// <summary>Represents policy identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyId { get; set; }
#nullable restore
#else
        public string PolicyId { get; set; }
#endif
        /// <summary>Represents the policy name of the time off request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyName { get; set; }
#nullable restore
#else
        public string PolicyName { get; set; }
#endif
        /// <summary>Represents requester user&apos;s id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequesterUserId { get; set; }
#nullable restore
#else
        public string RequesterUserId { get; set; }
#endif
        /// <summary>Represents requester user&apos;s username.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequesterUserName { get; set; }
#nullable restore
#else
        public string RequesterUserName { get; set; }
#endif
        /// <summary>Represents the status the time off request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.PtoTimeOffRequestStatus? Status { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.PtoTimeOffRequestStatus Status { get; set; }
#endif
        /// <summary>Represents the period the time off request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.TimeOffRequestPeriod? TimeOffPeriod { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.TimeOffRequestPeriod TimeOffPeriod { get; set; }
#endif
        /// <summary>Represents the time unit of the time off request.</summary>
        public global::ClockifyClient.Models.TimeOffRequestFullDtoV1_timeUnit? TimeUnit { get; set; }
        /// <summary>Represents user&apos;s email</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserEmail { get; set; }
#nullable restore
#else
        public string UserEmail { get; set; }
#endif
        /// <summary>Represents user identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>Represents user&apos;s username.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserName { get; set; }
#nullable restore
#else
        public string UserName { get; set; }
#endif
        /// <summary>Represents user&apos;s time zone</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserTimeZone { get; set; }
#nullable restore
#else
        public string UserTimeZone { get; set; }
#endif
        /// <summary>Represents workspace identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WorkspaceId { get; set; }
#nullable restore
#else
        public string WorkspaceId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.TimeOffRequestFullDtoV1"/> and sets the default values.
        /// </summary>
        public TimeOffRequestFullDtoV1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.TimeOffRequestFullDtoV1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.TimeOffRequestFullDtoV1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.TimeOffRequestFullDtoV1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "balance", n => { Balance = n.GetDoubleValue(); } },
                { "balanceDiff", n => { BalanceDiff = n.GetDoubleValue(); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "note", n => { Note = n.GetStringValue(); } },
                { "policyId", n => { PolicyId = n.GetStringValue(); } },
                { "policyName", n => { PolicyName = n.GetStringValue(); } },
                { "requesterUserId", n => { RequesterUserId = n.GetStringValue(); } },
                { "requesterUserName", n => { RequesterUserName = n.GetStringValue(); } },
                { "status", n => { Status = n.GetObjectValue<global::ClockifyClient.Models.PtoTimeOffRequestStatus>(global::ClockifyClient.Models.PtoTimeOffRequestStatus.CreateFromDiscriminatorValue); } },
                { "timeOffPeriod", n => { TimeOffPeriod = n.GetObjectValue<global::ClockifyClient.Models.TimeOffRequestPeriod>(global::ClockifyClient.Models.TimeOffRequestPeriod.CreateFromDiscriminatorValue); } },
                { "timeUnit", n => { TimeUnit = n.GetEnumValue<global::ClockifyClient.Models.TimeOffRequestFullDtoV1_timeUnit>(); } },
                { "userEmail", n => { UserEmail = n.GetStringValue(); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
                { "userName", n => { UserName = n.GetStringValue(); } },
                { "userTimeZone", n => { UserTimeZone = n.GetStringValue(); } },
                { "workspaceId", n => { WorkspaceId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("balance", Balance);
            writer.WriteDoubleValue("balanceDiff", BalanceDiff);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("note", Note);
            writer.WriteStringValue("policyId", PolicyId);
            writer.WriteStringValue("policyName", PolicyName);
            writer.WriteStringValue("requesterUserId", RequesterUserId);
            writer.WriteStringValue("requesterUserName", RequesterUserName);
            writer.WriteObjectValue<global::ClockifyClient.Models.PtoTimeOffRequestStatus>("status", Status);
            writer.WriteObjectValue<global::ClockifyClient.Models.TimeOffRequestPeriod>("timeOffPeriod", TimeOffPeriod);
            writer.WriteEnumValue<global::ClockifyClient.Models.TimeOffRequestFullDtoV1_timeUnit>("timeUnit", TimeUnit);
            writer.WriteStringValue("userEmail", UserEmail);
            writer.WriteStringValue("userId", UserId);
            writer.WriteStringValue("userName", UserName);
            writer.WriteStringValue("userTimeZone", UserTimeZone);
            writer.WriteStringValue("workspaceId", WorkspaceId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
