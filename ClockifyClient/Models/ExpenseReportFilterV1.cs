// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ExpenseReportFilterV1 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents approval state</summary>
        public global::ClockifyClient.Models.ExpenseReportFilterV1_approvalState? ApprovalState { get; set; }
        /// <summary>Indicates whether report is billable</summary>
        public bool? Billable { get; set; }
        /// <summary>The categories property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.ContainsArchivedFilterV1? Categories { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.ContainsArchivedFilterV1 Categories { get; set; }
#endif
        /// <summary>The clients property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.ContainsArchivedFilterV1? Clients { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.ContainsArchivedFilterV1 Clients { get; set; }
#endif
        /// <summary>The currency property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.ContainsArchivedFilterV1? Currency { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.ContainsArchivedFilterV1 Currency { get; set; }
#endif
        /// <summary>Provide date in format YYYY-MM-DDTHH:MM:SS.ssssssZ</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DateRangeEnd { get; set; }
#nullable restore
#else
        public string DateRangeEnd { get; set; }
#endif
        /// <summary>Provide date in format YYYY-MM-DDTHH:MM:SS.ssssssZ</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DateRangeStart { get; set; }
#nullable restore
#else
        public string DateRangeStart { get; set; }
#endif
        /// <summary>Represents date range type of expense report</summary>
        public global::ClockifyClient.Models.ExpenseReportFilterV1_dateRangeType? DateRangeType { get; set; }
        /// <summary>Represents export type</summary>
        public global::ClockifyClient.Models.ExpenseReportFilterV1_exportType? ExportType { get; set; }
        /// <summary>Represents invoicing state</summary>
        public global::ClockifyClient.Models.ExpenseReportFilterV1_invoicingState? InvoicingState { get; set; }
        /// <summary>Represents search term for filtering report entries by note</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Note { get; set; }
#nullable restore
#else
        public string Note { get; set; }
#endif
        /// <summary>Page number.</summary>
        public int? Page { get; set; }
        /// <summary>Page size.</summary>
        public int? PageSize { get; set; }
        /// <summary>The projects property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.ContainsArchivedFilterV1? Projects { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.ContainsArchivedFilterV1 Projects { get; set; }
#endif
        /// <summary>Represents expenses sort column</summary>
        public global::ClockifyClient.Models.ExpenseReportFilterV1_sortColumn? SortColumn { get; set; }
        /// <summary>Represents sort order</summary>
        public global::ClockifyClient.Models.ExpenseReportFilterV1_sortOrder? SortOrder { get; set; }
        /// <summary>Represents filter criteria for expenses associated with tasks.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.ContainsTaskFilterV1? Tasks { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.ContainsTaskFilterV1 Tasks { get; set; }
#endif
        /// <summary>Represents time zone</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeZone { get; set; }
#nullable restore
#else
        public string TimeZone { get; set; }
#endif
        /// <summary>The userGroups property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.ContainsUsersFilterV1? UserGroups { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.ContainsUsersFilterV1 UserGroups { get; set; }
#endif
        /// <summary>Represents user locale</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserLocale { get; set; }
#nullable restore
#else
        public string UserLocale { get; set; }
#endif
        /// <summary>The users property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.ContainsUsersFilterV1? Users { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.ContainsUsersFilterV1 Users { get; set; }
#endif
        /// <summary>Represents week start</summary>
        public global::ClockifyClient.Models.ExpenseReportFilterV1_weekStart? WeekStart { get; set; }
        /// <summary>If set to &apos;true&apos;, report will only include entries with empty note</summary>
        public bool? WithoutNote { get; set; }
        /// <summary>Represents zoom level</summary>
        public global::ClockifyClient.Models.ExpenseReportFilterV1_zoomLevel? ZoomLevel { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.ExpenseReportFilterV1"/> and sets the default values.
        /// </summary>
        public ExpenseReportFilterV1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.ExpenseReportFilterV1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.ExpenseReportFilterV1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.ExpenseReportFilterV1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "approvalState", n => { ApprovalState = n.GetEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_approvalState>(); } },
                { "billable", n => { Billable = n.GetBoolValue(); } },
                { "categories", n => { Categories = n.GetObjectValue<global::ClockifyClient.Models.ContainsArchivedFilterV1>(global::ClockifyClient.Models.ContainsArchivedFilterV1.CreateFromDiscriminatorValue); } },
                { "clients", n => { Clients = n.GetObjectValue<global::ClockifyClient.Models.ContainsArchivedFilterV1>(global::ClockifyClient.Models.ContainsArchivedFilterV1.CreateFromDiscriminatorValue); } },
                { "currency", n => { Currency = n.GetObjectValue<global::ClockifyClient.Models.ContainsArchivedFilterV1>(global::ClockifyClient.Models.ContainsArchivedFilterV1.CreateFromDiscriminatorValue); } },
                { "dateRangeEnd", n => { DateRangeEnd = n.GetStringValue(); } },
                { "dateRangeStart", n => { DateRangeStart = n.GetStringValue(); } },
                { "dateRangeType", n => { DateRangeType = n.GetEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_dateRangeType>(); } },
                { "exportType", n => { ExportType = n.GetEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_exportType>(); } },
                { "invoicingState", n => { InvoicingState = n.GetEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_invoicingState>(); } },
                { "note", n => { Note = n.GetStringValue(); } },
                { "page", n => { Page = n.GetIntValue(); } },
                { "pageSize", n => { PageSize = n.GetIntValue(); } },
                { "projects", n => { Projects = n.GetObjectValue<global::ClockifyClient.Models.ContainsArchivedFilterV1>(global::ClockifyClient.Models.ContainsArchivedFilterV1.CreateFromDiscriminatorValue); } },
                { "sortColumn", n => { SortColumn = n.GetEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_sortColumn>(); } },
                { "sortOrder", n => { SortOrder = n.GetEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_sortOrder>(); } },
                { "tasks", n => { Tasks = n.GetObjectValue<global::ClockifyClient.Models.ContainsTaskFilterV1>(global::ClockifyClient.Models.ContainsTaskFilterV1.CreateFromDiscriminatorValue); } },
                { "timeZone", n => { TimeZone = n.GetStringValue(); } },
                { "userGroups", n => { UserGroups = n.GetObjectValue<global::ClockifyClient.Models.ContainsUsersFilterV1>(global::ClockifyClient.Models.ContainsUsersFilterV1.CreateFromDiscriminatorValue); } },
                { "userLocale", n => { UserLocale = n.GetStringValue(); } },
                { "users", n => { Users = n.GetObjectValue<global::ClockifyClient.Models.ContainsUsersFilterV1>(global::ClockifyClient.Models.ContainsUsersFilterV1.CreateFromDiscriminatorValue); } },
                { "weekStart", n => { WeekStart = n.GetEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_weekStart>(); } },
                { "withoutNote", n => { WithoutNote = n.GetBoolValue(); } },
                { "zoomLevel", n => { ZoomLevel = n.GetEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_zoomLevel>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_approvalState>("approvalState", ApprovalState);
            writer.WriteBoolValue("billable", Billable);
            writer.WriteObjectValue<global::ClockifyClient.Models.ContainsArchivedFilterV1>("categories", Categories);
            writer.WriteObjectValue<global::ClockifyClient.Models.ContainsArchivedFilterV1>("clients", Clients);
            writer.WriteObjectValue<global::ClockifyClient.Models.ContainsArchivedFilterV1>("currency", Currency);
            writer.WriteStringValue("dateRangeEnd", DateRangeEnd);
            writer.WriteStringValue("dateRangeStart", DateRangeStart);
            writer.WriteEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_dateRangeType>("dateRangeType", DateRangeType);
            writer.WriteEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_exportType>("exportType", ExportType);
            writer.WriteEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_invoicingState>("invoicingState", InvoicingState);
            writer.WriteStringValue("note", Note);
            writer.WriteIntValue("page", Page);
            writer.WriteIntValue("pageSize", PageSize);
            writer.WriteObjectValue<global::ClockifyClient.Models.ContainsArchivedFilterV1>("projects", Projects);
            writer.WriteEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_sortColumn>("sortColumn", SortColumn);
            writer.WriteEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_sortOrder>("sortOrder", SortOrder);
            writer.WriteObjectValue<global::ClockifyClient.Models.ContainsTaskFilterV1>("tasks", Tasks);
            writer.WriteStringValue("timeZone", TimeZone);
            writer.WriteObjectValue<global::ClockifyClient.Models.ContainsUsersFilterV1>("userGroups", UserGroups);
            writer.WriteStringValue("userLocale", UserLocale);
            writer.WriteObjectValue<global::ClockifyClient.Models.ContainsUsersFilterV1>("users", Users);
            writer.WriteEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_weekStart>("weekStart", WeekStart);
            writer.WriteBoolValue("withoutNote", WithoutNote);
            writer.WriteEnumValue<global::ClockifyClient.Models.ExpenseReportFilterV1_zoomLevel>("zoomLevel", ZoomLevel);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
