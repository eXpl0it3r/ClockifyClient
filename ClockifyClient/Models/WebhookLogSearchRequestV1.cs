// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WebhookLogSearchRequestV1 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents date and time in yyyy-MM-ddThh:mm:ssZ format. If provided, results will include logs which occurred after this value.</summary>
        public DateTimeOffset? From { get; set; }
        /// <summary>If set to true, logs will be sorted with most recent first.</summary>
        public bool? SortByNewest { get; set; }
        /// <summary>Filters logs by status.</summary>
        public global::ClockifyClient.Models.WebhookLogSearchRequestV1_status? Status { get; set; }
        /// <summary>Represents date and time in yyyy-MM-ddThh:mm:ssZ format. If provided, results will include logs which occurred before this value.</summary>
        public DateTimeOffset? To { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.WebhookLogSearchRequestV1"/> and sets the default values.
        /// </summary>
        public WebhookLogSearchRequestV1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.WebhookLogSearchRequestV1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.WebhookLogSearchRequestV1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.WebhookLogSearchRequestV1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "from", n => { From = n.GetDateTimeOffsetValue(); } },
                { "sortByNewest", n => { SortByNewest = n.GetBoolValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::ClockifyClient.Models.WebhookLogSearchRequestV1_status>(); } },
                { "to", n => { To = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("from", From);
            writer.WriteBoolValue("sortByNewest", SortByNewest);
            writer.WriteEnumValue<global::ClockifyClient.Models.WebhookLogSearchRequestV1_status>("status", Status);
            writer.WriteDateTimeOffsetValue("to", To);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
