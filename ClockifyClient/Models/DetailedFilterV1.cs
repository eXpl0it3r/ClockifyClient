// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    /// <summary>
    /// Represents detailed report filter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class DetailedFilterV1 : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The auditFilter property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.AuditFilterV1? AuditFilter { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.AuditFilterV1 AuditFilter { get; set; }
#endif
        /// <summary>The options property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.DetailedOptionsV1? Options { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.DetailedOptionsV1 Options { get; set; }
#endif
        /// <summary>The page property</summary>
        public int? Page { get; set; }
        /// <summary>The pageSize property</summary>
        public int? PageSize { get; set; }
        /// <summary>If provided, you&apos;ll get sorted result by sort column.</summary>
        public global::ClockifyClient.Models.DetailedFilterV1_sortColumn? SortColumn { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.DetailedFilterV1"/> and sets the default values.
        /// </summary>
        public DetailedFilterV1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.DetailedFilterV1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.DetailedFilterV1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.DetailedFilterV1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "auditFilter", n => { AuditFilter = n.GetObjectValue<global::ClockifyClient.Models.AuditFilterV1>(global::ClockifyClient.Models.AuditFilterV1.CreateFromDiscriminatorValue); } },
                { "options", n => { Options = n.GetObjectValue<global::ClockifyClient.Models.DetailedOptionsV1>(global::ClockifyClient.Models.DetailedOptionsV1.CreateFromDiscriminatorValue); } },
                { "page", n => { Page = n.GetIntValue(); } },
                { "pageSize", n => { PageSize = n.GetIntValue(); } },
                { "sortColumn", n => { SortColumn = n.GetEnumValue<global::ClockifyClient.Models.DetailedFilterV1_sortColumn>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::ClockifyClient.Models.AuditFilterV1>("auditFilter", AuditFilter);
            writer.WriteObjectValue<global::ClockifyClient.Models.DetailedOptionsV1>("options", Options);
            writer.WriteIntValue("page", Page);
            writer.WriteIntValue("pageSize", PageSize);
            writer.WriteEnumValue<global::ClockifyClient.Models.DetailedFilterV1_sortColumn>("sortColumn", SortColumn);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
