// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    /// <summary>
    /// Represents a list of time entry info data transfer objects.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TimeEntryInfoDto : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents approval identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApprovalRequestId { get; set; }
#nullable restore
#else
        public string ApprovalRequestId { get; set; }
#endif
        /// <summary>Indicates whether time entry is billable or not.</summary>
        public bool? Billable { get; set; }
        /// <summary>Represents cost rate object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.RateDto? CostRate { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.RateDto CostRate { get; set; }
#endif
        /// <summary>Represents a list of custom field value objects.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.CustomFieldValueDto>? CustomFieldValues { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.CustomFieldValueDto> CustomFieldValues { get; set; }
#endif
        /// <summary>Represents a time entry description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Represents cost rate object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.RateDto? HourlyRate { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.RateDto HourlyRate { get; set; }
#endif
        /// <summary>Represents time entry identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Indicates whether time entry is locked or not.</summary>
        public bool? IsLocked { get; set; }
        /// <summary>Represents project info object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.ProjectInfoDto? Project { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.ProjectInfoDto Project { get; set; }
#endif
        /// <summary>Represents a list of tag objects.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.TagDto>? Tags { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.TagDto> Tags { get; set; }
#endif
        /// <summary>Represents task info object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.TaskInfoDto? Task { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.TaskInfoDto Task { get; set; }
#endif
        /// <summary>The timeInterval property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.TimeIntervalDto? TimeInterval { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.TimeIntervalDto TimeInterval { get; set; }
#endif
        /// <summary>Represents a time entry type enum.</summary>
        public global::ClockifyClient.Models.TimeEntryInfoDto_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.TimeEntryInfoDto"/> and sets the default values.
        /// </summary>
        public TimeEntryInfoDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.TimeEntryInfoDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.TimeEntryInfoDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.TimeEntryInfoDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "approvalRequestId", n => { ApprovalRequestId = n.GetStringValue(); } },
                { "billable", n => { Billable = n.GetBoolValue(); } },
                { "costRate", n => { CostRate = n.GetObjectValue<global::ClockifyClient.Models.RateDto>(global::ClockifyClient.Models.RateDto.CreateFromDiscriminatorValue); } },
                { "customFieldValues", n => { CustomFieldValues = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.CustomFieldValueDto>(global::ClockifyClient.Models.CustomFieldValueDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "hourlyRate", n => { HourlyRate = n.GetObjectValue<global::ClockifyClient.Models.RateDto>(global::ClockifyClient.Models.RateDto.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "isLocked", n => { IsLocked = n.GetBoolValue(); } },
                { "project", n => { Project = n.GetObjectValue<global::ClockifyClient.Models.ProjectInfoDto>(global::ClockifyClient.Models.ProjectInfoDto.CreateFromDiscriminatorValue); } },
                { "tags", n => { Tags = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.TagDto>(global::ClockifyClient.Models.TagDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "task", n => { Task = n.GetObjectValue<global::ClockifyClient.Models.TaskInfoDto>(global::ClockifyClient.Models.TaskInfoDto.CreateFromDiscriminatorValue); } },
                { "timeInterval", n => { TimeInterval = n.GetObjectValue<global::ClockifyClient.Models.TimeIntervalDto>(global::ClockifyClient.Models.TimeIntervalDto.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::ClockifyClient.Models.TimeEntryInfoDto_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("approvalRequestId", ApprovalRequestId);
            writer.WriteBoolValue("billable", Billable);
            writer.WriteObjectValue<global::ClockifyClient.Models.RateDto>("costRate", CostRate);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.CustomFieldValueDto>("customFieldValues", CustomFieldValues);
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<global::ClockifyClient.Models.RateDto>("hourlyRate", HourlyRate);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isLocked", IsLocked);
            writer.WriteObjectValue<global::ClockifyClient.Models.ProjectInfoDto>("project", Project);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.TagDto>("tags", Tags);
            writer.WriteObjectValue<global::ClockifyClient.Models.TaskInfoDto>("task", Task);
            writer.WriteObjectValue<global::ClockifyClient.Models.TimeIntervalDto>("timeInterval", TimeInterval);
            writer.WriteEnumValue<global::ClockifyClient.Models.TimeEntryInfoDto_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
