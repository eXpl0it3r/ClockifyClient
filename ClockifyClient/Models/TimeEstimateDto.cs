// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    /// <summary>
    /// Represents project time estimate object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TimeEstimateDto : IAdditionalDataHolder, IParsable
    {
        /// <summary>The active property</summary>
        public bool? Active { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents project duration in milliseconds.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Estimate { get; set; }
#nullable restore
#else
        public string Estimate { get; set; }
#endif
        /// <summary>The includeNonBillable property</summary>
        public bool? IncludeNonBillable { get; set; }
        /// <summary>Represents a reset option enum.</summary>
        public global::ClockifyClient.Models.TimeEstimateDto_resetOption? ResetOption { get; set; }
        /// <summary>Represents an estimate type enum.</summary>
        public global::ClockifyClient.Models.TimeEstimateDto_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.TimeEstimateDto"/> and sets the default values.
        /// </summary>
        public TimeEstimateDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.TimeEstimateDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.TimeEstimateDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.TimeEstimateDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active", n => { Active = n.GetBoolValue(); } },
                { "estimate", n => { Estimate = n.GetStringValue(); } },
                { "includeNonBillable", n => { IncludeNonBillable = n.GetBoolValue(); } },
                { "resetOption", n => { ResetOption = n.GetEnumValue<global::ClockifyClient.Models.TimeEstimateDto_resetOption>(); } },
                { "type", n => { Type = n.GetEnumValue<global::ClockifyClient.Models.TimeEstimateDto_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("active", Active);
            writer.WriteStringValue("estimate", Estimate);
            writer.WriteBoolValue("includeNonBillable", IncludeNonBillable);
            writer.WriteEnumValue<global::ClockifyClient.Models.TimeEstimateDto_resetOption>("resetOption", ResetOption);
            writer.WriteEnumValue<global::ClockifyClient.Models.TimeEstimateDto_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
