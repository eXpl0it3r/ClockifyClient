// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    /// <summary>
    /// Represents a list of task request objects.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TaskRequest : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The assigneeId property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssigneeId { get; set; }
#nullable restore
#else
        public string AssigneeId { get; set; }
#endif
        /// <summary>Represents list of assignee ids for the task.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AssigneeIds { get; set; }
#nullable restore
#else
        public List<string> AssigneeIds { get; set; }
#endif
        /// <summary>Flag to set whether task is billable or not</summary>
        public bool? Billable { get; set; }
        /// <summary>The budgetEstimate property</summary>
        public long? BudgetEstimate { get; set; }
        /// <summary>Represents a cost rate request object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.CostRateRequest? CostRate { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.CostRateRequest CostRate { get; set; }
#endif
        /// <summary>Represents a task duration estimate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Estimate { get; set; }
#nullable restore
#else
        public string Estimate { get; set; }
#endif
        /// <summary>Represents an hourly rate request object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.HourlyRateRequest? HourlyRate { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.HourlyRateRequest HourlyRate { get; set; }
#endif
        /// <summary>Represents task identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Represents task name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Represents project identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProjectId { get; set; }
#nullable restore
#else
        public string ProjectId { get; set; }
#endif
        /// <summary>The status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>Represents list of user group ids for the task.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UserGroupIds { get; set; }
#nullable restore
#else
        public List<string> UserGroupIds { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.TaskRequest"/> and sets the default values.
        /// </summary>
        public TaskRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.TaskRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.TaskRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.TaskRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assigneeId", n => { AssigneeId = n.GetStringValue(); } },
                { "assigneeIds", n => { AssigneeIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "billable", n => { Billable = n.GetBoolValue(); } },
                { "budgetEstimate", n => { BudgetEstimate = n.GetLongValue(); } },
                { "costRate", n => { CostRate = n.GetObjectValue<global::ClockifyClient.Models.CostRateRequest>(global::ClockifyClient.Models.CostRateRequest.CreateFromDiscriminatorValue); } },
                { "estimate", n => { Estimate = n.GetStringValue(); } },
                { "hourlyRate", n => { HourlyRate = n.GetObjectValue<global::ClockifyClient.Models.HourlyRateRequest>(global::ClockifyClient.Models.HourlyRateRequest.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "projectId", n => { ProjectId = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "userGroupIds", n => { UserGroupIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("assigneeId", AssigneeId);
            writer.WriteCollectionOfPrimitiveValues<string>("assigneeIds", AssigneeIds);
            writer.WriteBoolValue("billable", Billable);
            writer.WriteLongValue("budgetEstimate", BudgetEstimate);
            writer.WriteObjectValue<global::ClockifyClient.Models.CostRateRequest>("costRate", CostRate);
            writer.WriteStringValue("estimate", Estimate);
            writer.WriteObjectValue<global::ClockifyClient.Models.HourlyRateRequest>("hourlyRate", HourlyRate);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("projectId", ProjectId);
            writer.WriteStringValue("status", Status);
            writer.WriteCollectionOfPrimitiveValues<string>("userGroupIds", UserGroupIds);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
