// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WorkspaceDtoV1 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents the Cake organization identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CakeOrganizationId { get; set; }
#nullable restore
#else
        public string CakeOrganizationId { get; set; }
#endif
        /// <summary>Represents a cost rate object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.RateDtoV1? CostRate { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.RateDtoV1 CostRate { get; set; }
#endif
        /// <summary>Represents currency with default info object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.CurrencyWithDefaultInfoDtoV1>? Currencies { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.CurrencyWithDefaultInfoDtoV1> Currencies { get; set; }
#endif
        /// <summary>Represents a list of features.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.Feature? Features { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.Feature Features { get; set; }
#endif
        /// <summary>Represents a feature subscription type enum.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.FeatureSubscriptionType? FeatureSubscriptionType { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.FeatureSubscriptionType FeatureSubscriptionType { get; set; }
#endif
        /// <summary>Represents an hourly rate object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.HourlyRateDtoV1? HourlyRate { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.HourlyRateDtoV1 HourlyRate { get; set; }
#endif
        /// <summary>Represents workspace identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Represents an image url.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl { get; set; }
#nullable restore
#else
        public string ImageUrl { get; set; }
#endif
        /// <summary>Represents a list of membership objects.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.MembershipDtoV1>? Memberships { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.MembershipDtoV1> Memberships { get; set; }
#endif
        /// <summary>Represents workspace name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Represents the workspace subdomain</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.WorkspaceSubdomainDtoV1? Subdomain { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.WorkspaceSubdomainDtoV1 Subdomain { get; set; }
#endif
        /// <summary>Workspace settings also include Time Duration Format settings.Setting Time Duration Format by changing the boolean fieldsdecimalFormat and trackTimeDownToSecond is now deprecated.Time Duration Format can be set by durationFormat enum field.Three different Time Duration modes will still map the boolean fields:    1. Full (hh:mm:ss) -&gt; decimalFormat = false, trackTimeDownToSecond = true,    2. Compact (h:mm) -&gt; decimalFormat = false, trackTimeDownToSecond = false,    3. Decimal (h:hh) -&gt; decimalFormat = true, trackTimeDownToSecond = true</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ClockifyClient.Models.WorkspaceSettingsDtoV1? WorkspaceSettings { get; set; }
#nullable restore
#else
        public global::ClockifyClient.Models.WorkspaceSettingsDtoV1 WorkspaceSettings { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.WorkspaceDtoV1"/> and sets the default values.
        /// </summary>
        public WorkspaceDtoV1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.WorkspaceDtoV1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.WorkspaceDtoV1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.WorkspaceDtoV1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cakeOrganizationId", n => { CakeOrganizationId = n.GetStringValue(); } },
                { "costRate", n => { CostRate = n.GetObjectValue<global::ClockifyClient.Models.RateDtoV1>(global::ClockifyClient.Models.RateDtoV1.CreateFromDiscriminatorValue); } },
                { "currencies", n => { Currencies = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.CurrencyWithDefaultInfoDtoV1>(global::ClockifyClient.Models.CurrencyWithDefaultInfoDtoV1.CreateFromDiscriminatorValue)?.AsList(); } },
                { "featureSubscriptionType", n => { FeatureSubscriptionType = n.GetObjectValue<global::ClockifyClient.Models.FeatureSubscriptionType>(global::ClockifyClient.Models.FeatureSubscriptionType.CreateFromDiscriminatorValue); } },
                { "features", n => { Features = n.GetObjectValue<global::ClockifyClient.Models.Feature>(global::ClockifyClient.Models.Feature.CreateFromDiscriminatorValue); } },
                { "hourlyRate", n => { HourlyRate = n.GetObjectValue<global::ClockifyClient.Models.HourlyRateDtoV1>(global::ClockifyClient.Models.HourlyRateDtoV1.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "imageUrl", n => { ImageUrl = n.GetStringValue(); } },
                { "memberships", n => { Memberships = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.MembershipDtoV1>(global::ClockifyClient.Models.MembershipDtoV1.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "subdomain", n => { Subdomain = n.GetObjectValue<global::ClockifyClient.Models.WorkspaceSubdomainDtoV1>(global::ClockifyClient.Models.WorkspaceSubdomainDtoV1.CreateFromDiscriminatorValue); } },
                { "workspaceSettings", n => { WorkspaceSettings = n.GetObjectValue<global::ClockifyClient.Models.WorkspaceSettingsDtoV1>(global::ClockifyClient.Models.WorkspaceSettingsDtoV1.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("cakeOrganizationId", CakeOrganizationId);
            writer.WriteObjectValue<global::ClockifyClient.Models.RateDtoV1>("costRate", CostRate);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.CurrencyWithDefaultInfoDtoV1>("currencies", Currencies);
            writer.WriteObjectValue<global::ClockifyClient.Models.Feature>("features", Features);
            writer.WriteObjectValue<global::ClockifyClient.Models.FeatureSubscriptionType>("featureSubscriptionType", FeatureSubscriptionType);
            writer.WriteObjectValue<global::ClockifyClient.Models.HourlyRateDtoV1>("hourlyRate", HourlyRate);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("imageUrl", ImageUrl);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.MembershipDtoV1>("memberships", Memberships);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::ClockifyClient.Models.WorkspaceSubdomainDtoV1>("subdomain", Subdomain);
            writer.WriteObjectValue<global::ClockifyClient.Models.WorkspaceSettingsDtoV1>("workspaceSettings", WorkspaceSettings);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
