// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MemberProfileFullRequestV1 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents an image url. A field that can only be updated for limited users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl { get; set; }
#nullable restore
#else
        public string ImageUrl { get; set; }
#endif
        /// <summary>This body field is deprecated and can only be updated for limited users. Represents name of the user and can be changed on the CAKE.com Account profile page.</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Indicates whether to remove profile image or not. A field that can only be updated for limited users.</summary>
        public bool? RemoveProfileImage { get; set; }
        /// <summary>Represents a list of upsert user custom field objects.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.UpsertUserCustomFieldRequest>? UserCustomFields { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.UpsertUserCustomFieldRequest> UserCustomFields { get; set; }
#endif
        /// <summary>Represents a day of the week.</summary>
        public global::ClockifyClient.Models.MemberProfileFullRequestV1_weekStart? WeekStart { get; set; }
        /// <summary>Represents work capacity as a time duration in the ISO-8601 format. For example, for a 7hr work day, input should be PT7H.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WorkCapacity { get; set; }
#nullable restore
#else
        public string WorkCapacity { get; set; }
#endif
        /// <summary>Represents a list of days of the week.</summary>
        public global::ClockifyClient.Models.MemberProfileFullRequestV1_workingDays? WorkingDays { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.MemberProfileFullRequestV1"/> and sets the default values.
        /// </summary>
        public MemberProfileFullRequestV1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.MemberProfileFullRequestV1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.MemberProfileFullRequestV1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.MemberProfileFullRequestV1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "imageUrl", n => { ImageUrl = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "removeProfileImage", n => { RemoveProfileImage = n.GetBoolValue(); } },
                { "userCustomFields", n => { UserCustomFields = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.UpsertUserCustomFieldRequest>(global::ClockifyClient.Models.UpsertUserCustomFieldRequest.CreateFromDiscriminatorValue)?.AsList(); } },
                { "weekStart", n => { WeekStart = n.GetEnumValue<global::ClockifyClient.Models.MemberProfileFullRequestV1_weekStart>(); } },
                { "workCapacity", n => { WorkCapacity = n.GetStringValue(); } },
                { "workingDays", n => { WorkingDays = n.GetEnumValue<global::ClockifyClient.Models.MemberProfileFullRequestV1_workingDays>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("imageUrl", ImageUrl);
            writer.WriteStringValue("name", Name);
            writer.WriteBoolValue("removeProfileImage", RemoveProfileImage);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.UpsertUserCustomFieldRequest>("userCustomFields", UserCustomFields);
            writer.WriteEnumValue<global::ClockifyClient.Models.MemberProfileFullRequestV1_weekStart>("weekStart", WeekStart);
            writer.WriteStringValue("workCapacity", WorkCapacity);
            writer.WriteEnumValue<global::ClockifyClient.Models.MemberProfileFullRequestV1_workingDays>("workingDays", WorkingDays);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
