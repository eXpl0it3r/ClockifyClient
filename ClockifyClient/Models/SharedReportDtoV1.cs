// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    /// <summary>
    /// Represents the array of reports.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SharedReportDtoV1 : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Indicates whether the shared report has a fixed date range</summary>
        public bool? FixedDate { get; set; }
        /// <summary>Represents shared report identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The isPublic property</summary>
        public bool? IsPublic { get; set; }
        /// <summary>Represents URI link of shared report.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Link { get; set; }
#nullable restore
#else
        public string Link { get; set; }
#endif
        /// <summary>Represents shared report&apos;s name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Represents report author (user) identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReportAuthor { get; set; }
#nullable restore
#else
        public string ReportAuthor { get; set; }
#endif
        /// <summary>Represents shared report type</summary>
        public global::ClockifyClient.Models.SharedReportDtoV1_type? Type { get; set; }
        /// <summary>The visibleToUserGroups property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.EntityName>? VisibleToUserGroups { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.EntityName> VisibleToUserGroups { get; set; }
#endif
        /// <summary>Represents ids of user to whom are visible shared report.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.EntityName>? VisibleToUsers { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.EntityName> VisibleToUsers { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.SharedReportDtoV1"/> and sets the default values.
        /// </summary>
        public SharedReportDtoV1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.SharedReportDtoV1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.SharedReportDtoV1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.SharedReportDtoV1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "fixedDate", n => { FixedDate = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "isPublic", n => { IsPublic = n.GetBoolValue(); } },
                { "link", n => { Link = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "reportAuthor", n => { ReportAuthor = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::ClockifyClient.Models.SharedReportDtoV1_type>(); } },
                { "visibleToUserGroups", n => { VisibleToUserGroups = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.EntityName>(global::ClockifyClient.Models.EntityName.CreateFromDiscriminatorValue)?.AsList(); } },
                { "visibleToUsers", n => { VisibleToUsers = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.EntityName>(global::ClockifyClient.Models.EntityName.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("fixedDate", FixedDate);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isPublic", IsPublic);
            writer.WriteStringValue("link", Link);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("reportAuthor", ReportAuthor);
            writer.WriteEnumValue<global::ClockifyClient.Models.SharedReportDtoV1_type>("type", Type);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.EntityName>("visibleToUserGroups", VisibleToUserGroups);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.EntityName>("visibleToUsers", VisibleToUsers);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
