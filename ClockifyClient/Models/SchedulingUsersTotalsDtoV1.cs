// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SchedulingUsersTotalsDtoV1 : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents capacity per day in seconds. For a 7hr work day, value is 25200.</summary>
        public double? CapacityPerDay { get; set; }
        /// <summary>Represents total hours per day object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.TotalsPerDayDto>? TotalHoursPerDay { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.TotalsPerDayDto> TotalHoursPerDay { get; set; }
#endif
        /// <summary>Represents user identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>Represents url path to user image.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserImage { get; set; }
#nullable restore
#else
        public string UserImage { get; set; }
#endif
        /// <summary>Represents user name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserName { get; set; }
#nullable restore
#else
        public string UserName { get; set; }
#endif
        /// <summary>Represents user status.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserStatus { get; set; }
#nullable restore
#else
        public string UserStatus { get; set; }
#endif
        /// <summary>Represents list of days of the week.</summary>
        public global::ClockifyClient.Models.SchedulingUsersTotalsDtoV1_workingDays? WorkingDays { get; set; }
        /// <summary>Represents workspace identifier across the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WorkspaceId { get; set; }
#nullable restore
#else
        public string WorkspaceId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.SchedulingUsersTotalsDtoV1"/> and sets the default values.
        /// </summary>
        public SchedulingUsersTotalsDtoV1()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.SchedulingUsersTotalsDtoV1"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.SchedulingUsersTotalsDtoV1 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.SchedulingUsersTotalsDtoV1();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "capacityPerDay", n => { CapacityPerDay = n.GetDoubleValue(); } },
                { "totalHoursPerDay", n => { TotalHoursPerDay = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.TotalsPerDayDto>(global::ClockifyClient.Models.TotalsPerDayDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
                { "userImage", n => { UserImage = n.GetStringValue(); } },
                { "userName", n => { UserName = n.GetStringValue(); } },
                { "userStatus", n => { UserStatus = n.GetStringValue(); } },
                { "workingDays", n => { WorkingDays = n.GetEnumValue<global::ClockifyClient.Models.SchedulingUsersTotalsDtoV1_workingDays>(); } },
                { "workspaceId", n => { WorkspaceId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("capacityPerDay", CapacityPerDay);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.TotalsPerDayDto>("totalHoursPerDay", TotalHoursPerDay);
            writer.WriteStringValue("userId", UserId);
            writer.WriteStringValue("userImage", UserImage);
            writer.WriteStringValue("userName", UserName);
            writer.WriteStringValue("userStatus", UserStatus);
            writer.WriteEnumValue<global::ClockifyClient.Models.SchedulingUsersTotalsDtoV1_workingDays>("workingDays", WorkingDays);
            writer.WriteStringValue("workspaceId", WorkspaceId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
