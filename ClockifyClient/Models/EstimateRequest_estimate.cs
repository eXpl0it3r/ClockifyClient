// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    /// <summary>
    /// Represents a time duration in ISO-8601 format.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class EstimateRequest_estimate : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The nano property</summary>
        public int? Nano { get; set; }
        /// <summary>The negative property</summary>
        public bool? Negative { get; set; }
        /// <summary>The positive property</summary>
        public bool? Positive { get; set; }
        /// <summary>The seconds property</summary>
        public long? Seconds { get; set; }
        /// <summary>The units property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ClockifyClient.Models.EstimateRequest_estimate_units>? Units { get; set; }
#nullable restore
#else
        public List<global::ClockifyClient.Models.EstimateRequest_estimate_units> Units { get; set; }
#endif
        /// <summary>The zero property</summary>
        public bool? Zero { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.EstimateRequest_estimate"/> and sets the default values.
        /// </summary>
        public EstimateRequest_estimate()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.EstimateRequest_estimate"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.EstimateRequest_estimate CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.EstimateRequest_estimate();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "nano", n => { Nano = n.GetIntValue(); } },
                { "negative", n => { Negative = n.GetBoolValue(); } },
                { "positive", n => { Positive = n.GetBoolValue(); } },
                { "seconds", n => { Seconds = n.GetLongValue(); } },
                { "units", n => { Units = n.GetCollectionOfObjectValues<global::ClockifyClient.Models.EstimateRequest_estimate_units>(global::ClockifyClient.Models.EstimateRequest_estimate_units.CreateFromDiscriminatorValue)?.AsList(); } },
                { "zero", n => { Zero = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("nano", Nano);
            writer.WriteBoolValue("negative", Negative);
            writer.WriteBoolValue("positive", Positive);
            writer.WriteLongValue("seconds", Seconds);
            writer.WriteCollectionOfObjectValues<global::ClockifyClient.Models.EstimateRequest_estimate_units>("units", Units);
            writer.WriteBoolValue("zero", Zero);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
