// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ClockifyClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PtoGetTimeOffRequestsV1Request : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Return time off requests created before the specified time in requester&apos;s time zone. Provide end in format YYYY-MM-DDTHH:MM:SS.ssssssZ</summary>
        public DateTimeOffset? End { get; set; }
        /// <summary>Page number.</summary>
        public int? Page { get; set; }
        /// <summary>Page size.</summary>
        public int? PageSize { get; set; }
        /// <summary>Return time off requests created after the specified time in requester&apos;s time zone. Provide start in format YYYY-MM-DDTHH:MM:SS.ssssssZ</summary>
        public DateTimeOffset? Start { get; set; }
        /// <summary>Filters time off requests by status.</summary>
        public global::ClockifyClient.Models.PtoGetTimeOffRequestsV1Request_statuses? Statuses { get; set; }
        /// <summary>Provide the user group ids of time off requests.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UserGroups { get; set; }
#nullable restore
#else
        public List<string> UserGroups { get; set; }
#endif
        /// <summary>Provide the user ids of time off requests.If empty will return time off requests of all users (with a maximum of 5000 users).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Users { get; set; }
#nullable restore
#else
        public List<string> Users { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.Models.PtoGetTimeOffRequestsV1Request"/> and sets the default values.
        /// </summary>
        public PtoGetTimeOffRequestsV1Request()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.PtoGetTimeOffRequestsV1Request"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ClockifyClient.Models.PtoGetTimeOffRequestsV1Request CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::ClockifyClient.Models.PtoGetTimeOffRequestsV1Request();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "end", n => { End = n.GetDateTimeOffsetValue(); } },
                { "page", n => { Page = n.GetIntValue(); } },
                { "pageSize", n => { PageSize = n.GetIntValue(); } },
                { "start", n => { Start = n.GetDateTimeOffsetValue(); } },
                { "statuses", n => { Statuses = n.GetEnumValue<global::ClockifyClient.Models.PtoGetTimeOffRequestsV1Request_statuses>(); } },
                { "userGroups", n => { UserGroups = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "users", n => { Users = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("end", End);
            writer.WriteIntValue("page", Page);
            writer.WriteIntValue("pageSize", PageSize);
            writer.WriteDateTimeOffsetValue("start", Start);
            writer.WriteEnumValue<global::ClockifyClient.Models.PtoGetTimeOffRequestsV1Request_statuses>("statuses", Statuses);
            writer.WriteCollectionOfPrimitiveValues<string>("userGroups", UserGroups);
            writer.WriteCollectionOfPrimitiveValues<string>("users", Users);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
