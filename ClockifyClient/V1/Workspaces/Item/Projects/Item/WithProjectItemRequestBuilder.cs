// <auto-generated/>
#pragma warning disable CS0618
using ClockifyClient.Models;
using ClockifyClient.V1.Workspaces.Item.Projects.Item.CustomFields;
using ClockifyClient.V1.Workspaces.Item.Projects.Item.Estimate;
using ClockifyClient.V1.Workspaces.Item.Projects.Item.Memberships;
using ClockifyClient.V1.Workspaces.Item.Projects.Item.Tasks;
using ClockifyClient.V1.Workspaces.Item.Projects.Item.Template;
using ClockifyClient.V1.Workspaces.Item.Projects.Item.Users;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace ClockifyClient.V1.Workspaces.Item.Projects.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \v1\workspaces\{workspaceId}\projects\{projectId}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithProjectItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The customFields property</summary>
        public global::ClockifyClient.V1.Workspaces.Item.Projects.Item.CustomFields.CustomFieldsRequestBuilder CustomFields
        {
            get => new global::ClockifyClient.V1.Workspaces.Item.Projects.Item.CustomFields.CustomFieldsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The estimate property</summary>
        public global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Estimate.EstimateRequestBuilder Estimate
        {
            get => new global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Estimate.EstimateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The memberships property</summary>
        public global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Memberships.MembershipsRequestBuilder Memberships
        {
            get => new global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Memberships.MembershipsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tasks property</summary>
        public global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Tasks.TasksRequestBuilder Tasks
        {
            get => new global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Tasks.TasksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The template property</summary>
        public global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Template.TemplateRequestBuilder Template
        {
            get => new global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Template.TemplateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The users property</summary>
        public global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Users.UsersRequestBuilder Users
        {
            get => new global::ClockifyClient.V1.Workspaces.Item.Projects.Item.Users.UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithProjectItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/workspaces/{workspaceId}/projects/{projectId}{?custom%2Dfield%2Dentity%2Dtype*,expense%2Ddate*,expense%2Dlimit*,hydrated*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithProjectItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v1/workspaces/{workspaceId}/projects/{projectId}{?custom%2Dfield%2Dentity%2Dtype*,expense%2Ddate*,expense%2Dlimit*,hydrated*}", rawUrl)
        {
        }
        /// <summary>
        /// Delete project from workspace
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.ProjectDtoImplV1"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::ClockifyClient.Models.ProjectDtoImplV1?> DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::ClockifyClient.Models.ProjectDtoImplV1> DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToDeleteRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::ClockifyClient.Models.ProjectDtoImplV1>(requestInfo, global::ClockifyClient.Models.ProjectDtoImplV1.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Find project by ID
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.ProjectDtoV1"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::ClockifyClient.Models.ProjectDtoV1?> GetAsync(Action<RequestConfiguration<global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder.WithProjectItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::ClockifyClient.Models.ProjectDtoV1> GetAsync(Action<RequestConfiguration<global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder.WithProjectItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::ClockifyClient.Models.ProjectDtoV1>(requestInfo, global::ClockifyClient.Models.ProjectDtoV1.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Update project on workspace
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.Models.ProjectDtoImplV1"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::ClockifyClient.Models.ProjectDtoImplV1?> PutAsync(global::ClockifyClient.Models.UpdateProjectRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::ClockifyClient.Models.ProjectDtoImplV1> PutAsync(global::ClockifyClient.Models.UpdateProjectRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPutRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::ClockifyClient.Models.ProjectDtoImplV1>(requestInfo, global::ClockifyClient.Models.ProjectDtoImplV1.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Delete project from workspace
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Find project by ID
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder.WithProjectItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder.WithProjectItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Update project on workspace
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPutRequestInformation(global::ClockifyClient.Models.UpdateProjectRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPutRequestInformation(global::ClockifyClient.Models.UpdateProjectRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PUT, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithProjectItemRequestBuilderDeleteRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Find project by ID
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithProjectItemRequestBuilderGetQueryParameters 
        {
            /// <summary>If provided, you&apos;ll get a filtered list of custom fields that matches the provided string with the custom field entity type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("custom%2Dfield%2Dentity%2Dtype")]
            public string? CustomFieldEntityType { get; set; }
#nullable restore
#else
            [QueryParameter("custom%2Dfield%2Dentity%2Dtype")]
            public string CustomFieldEntityType { get; set; }
#endif
            /// <summary>If provided, you will get expenses dated before the provided value in yyyy-MM-dd format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expense%2Ddate")]
            public string? ExpenseDate { get; set; }
#nullable restore
#else
            [QueryParameter("expense%2Ddate")]
            public string ExpenseDate { get; set; }
#endif
            /// <summary>Represents maximum number of expenses to fetch.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expense%2Dlimit")]
            public string? ExpenseLimit { get; set; }
#nullable restore
#else
            [QueryParameter("expense%2Dlimit")]
            public string ExpenseLimit { get; set; }
#endif
            /// <summary>If set to true, results will contain additional information about the project</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("hydrated")]
            public string? Hydrated { get; set; }
#nullable restore
#else
            [QueryParameter("hydrated")]
            public string Hydrated { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithProjectItemRequestBuilderGetRequestConfiguration : RequestConfiguration<global::ClockifyClient.V1.Workspaces.Item.Projects.Item.WithProjectItemRequestBuilder.WithProjectItemRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WithProjectItemRequestBuilderPutRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
