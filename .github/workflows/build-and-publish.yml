name: Build and Publish

on: [push, pull_request, workflow_dispatch]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  NuGetDirectory: ${{ github.workspace }}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.dotnet.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2022, os: windows-2025 }
        - { name: Ubuntu x64, os: ubuntu-24.04 }
        - { name: macOS x64, os: macos-14 }
        - { name: macOS arm64, os: macos-15 }
        dotnet:
        - { name: .NET 9, version: '9.0.x' }
        - { name: .NET 10, version: '10.0.x' }

    steps:
    - name: Checkout ClockifyClient
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for Nerdbank.GitVersioning

    - name: Setup .NET ${{ matrix.dotnet.version }} SDK
      id: setup-dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet.version }}
    - name: Enforce SDK Version
      run: dotnet new globaljson --sdk-version ${{ steps.setup-dotnet.outputs.dotnet-version }} --force
    - name: Verify SDK Installation
      run: dotnet --info

    - name: Restore Dependencies
      run: dotnet restore ClockifyClient.sln

    - name: Build
      run: dotnet build ClockifyClient.sln --configuration Release --no-restore

    - name: Create NuGet package
      run: dotnet pack ClockifyClient/ClockifyClient.csproj --configuration Release --no-build --verbosity normal --output ${{ env.NuGetDirectory }}

    - name: Upload NuGet package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: "ClockifyClient (${{ matrix.platform.name }} ${{ matrix.dotnet.name }})"
        path: ${{ env.NuGetDirectory }}/*.*nupkg

    - name: Publish to NuGet
      if: github.ref == 'refs/heads/master' && matrix.dotnet.name == '.NET 9' && runner.os == 'Windows'
      run: |
        foreach($file in (Get-ChildItem ${{ env.NuGetDirectory }} -Recurse -Include *.nupkg)) {
          dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
        }
